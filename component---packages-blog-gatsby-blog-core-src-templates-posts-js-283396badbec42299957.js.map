{"version":3,"file":"component---packages-blog-gatsby-blog-core-src-templates-posts-js-283396badbec42299957.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Sticky/Sticky.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/IconButton/IconButton.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-widgets/src/Categories/Categories.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-widgets/src/Tags/Tags.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-widgets/src/Social/Social.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-widgets/src/HeroWide/HeroWide.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/./src/@elegantstack/gatsby-theme-flexiblog-personal/components/Hero/Hero.Content.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/./src/@elegantstack/gatsby-theme-flexiblog-personal/components/Hero/Hero.Photo.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/./src/@elegantstack/gatsby-theme-flexiblog-personal/components/Hero/Hero.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/./src/@elegantstack/gatsby-theme-flexiblog-personal/containers/Posts.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-core/src/templates/posts.js","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/utils/normalizeSlug.js","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Pagination/Pagination.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-helpers/src/useBlogCategories.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-helpers/src/useBlogAuthors.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-helpers/src/useBlogTags.jsx"],"sourcesContent":["import React from 'react'\nimport { Container } from 'theme-ui'\n\nconst Sticky = ({ children }) => (\n  <Container variant='sticky'>{children}</Container>\n)\n\nexport default Sticky\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport SVG from 'react-inlinesvg'\nimport { Button, Box, Heading } from 'theme-ui'\n\nconst styles = {\n  button: {\n    vertical: {\n      variant: `cards.primary`,\n      display: `flex`,\n      alignItems: `center`,\n      textAlign: `initial`,\n      overflow: `hidden`,\n      mb: 3,\n      p: 0,\n      pr: 2,\n      svg: {\n        color: `omegaDark`,\n        verticalAlign: `middle`,\n        size: `icon.xs`\n      },\n      ':hover': {\n        svg: {\n          color: `white`\n        },\n        'div:first-of-type': {\n          bg: `alpha`\n        }\n      }\n    },\n    horizontal: {\n      variant: `cards.interactive`,\n      p: 0,\n      svg: {\n        color: `alpha`,\n        size: `icon.sm`\n      },\n      ':hover': {\n        svg: {\n          color: `omegaDark`\n        }\n      }\n    }\n  },\n  icon: {\n    vertical: {\n      display: [`flex`, `none`, `flex`],\n      transition: `all 250ms ease`,\n      alignItems: `center`,\n      justifyContent: `center`,\n      alignSelf: `stretch`,\n      bg: `omegaLight`,\n      width: 70\n    },\n    horizontal: {\n      display: [`block`, `none`, `block`],\n      boxSizing: `content-box`,\n      transition: `all 250ms ease`,\n      borderRadius: `bottom`,\n      width: `1/3`,\n      height: `icon.sm`,\n      mx: `auto`,\n      pt: 3\n    }\n  },\n  text: {\n    flex: `auto`,\n    color: `omegaDark`,\n    whiteSpace: `nowrap`,\n    p: 3,\n    m: 0\n  }\n}\n\nexport const IconButton = ({\n  variant,\n  name,\n  Icon,\n  iconPath,\n  iconColor,\n  to\n}) => (\n  <Button variant='none' as={to && Link} to={to} sx={styles.button[variant]}>\n    {(Icon || iconPath) && (\n      <Box sx={styles.icon[variant]}>\n        {iconPath && <SVG src={iconPath} />}\n        {Icon && <Icon color={iconColor} />}\n      </Box>\n    )}\n    <Heading variant='h4' as='span' sx={styles.text}>\n      {name}\n    </Heading>\n  </Button>\n)\n\nexport default IconButton\n\nIconButton.defaultProps = {\n  variant: 'horizontal',\n  number: undefined\n}\n\nIconButton.propTypes = {\n  variant: PropTypes.oneOf(['horizontal', 'vertical']),\n  name: PropTypes.string,\n  number: PropTypes.number,\n  Icon: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  iconPath: PropTypes.string,\n  to: PropTypes.string\n}\n","import React from 'react'\nimport { Box } from 'theme-ui'\nimport { FaArchive } from 'react-icons/fa'\nimport IconButton from '@components/IconButton'\nimport Section from '@components/Section'\n\nconst styles = {\n  horizontal: {\n    display: `flex`,\n    flexWrap: `nowrap`,\n    overflowX: `auto`,\n    width: `auto`,\n    scrollBehavior: `smooth`,\n    m: -2,\n    a: {\n      flex: 1,\n      minWidth: [`1/3`, `auto`],\n      m: 2\n    }\n  }\n}\n\nconst Categories = ({ variant, categories, ...props }) => (\n  <Section aside={variant === 'vertical'} title='Topics' {...props}>\n    <Box sx={styles[variant]}>\n      {categories &&\n        categories.map(({ id, name, slug, totalCount, icon }) => {\n          const buttonProps = {\n            key: id,\n            name,\n            number: totalCount,\n            to: slug,\n            iconPath: icon,\n            Icon: !icon && FaArchive,\n            variant\n          }\n\n          return totalCount !== 0 && <IconButton {...buttonProps} />\n        })}\n    </Box>\n  </Section>\n)\n\nexport default Categories\n\nCategories.defaultProps = {\n  variant: 'vertical'\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Card, Badge, Box } from 'theme-ui'\nimport Section from '@components/Section'\n\nconst Tags = ({ tags, ...props }) => (\n  <Section aside title='Tags' {...props}>\n    <Card variant='paper'>\n      <Box variant='lists.badges'>\n        {tags &&\n          tags.map(({ id, name, slug }) => (\n            <Badge variant='tag' key={id} as={Link} to={slug}>\n              {name}\n            </Badge>\n          ))}\n      </Box>\n    </Card>\n  </Section>\n)\n\nexport default Tags\n","import React from 'react'\nimport { Card, Text } from 'theme-ui'\nimport Section from '@components/Section'\nimport Navigation from '@components/Navigation'\nimport useSiteMetadata from '@helpers-blog/useSiteMetadata'\nimport attachSocialIcons from '@helpers/attachSocialIcons'\n\nconst Social = () => {\n  const { social } = useSiteMetadata()\n\n  return (\n    <Section aside title=\"Let's Talk\">\n      <Card variant='paper'>\n        <Text variant='p'>\n          Want to find out how I can solve problems specific to your business?\n          Let's talk.\n        </Text>\n        <Navigation items={attachSocialIcons(social)} iconOnly />\n      </Card>\n    </Section>\n  )\n}\n\nexport default Social\n","import React, { Children } from 'react'\nimport { Flex, Box } from 'theme-ui'\n\nconst styles = {\n  wrapper: {\n    alignItems: `center`,\n    justifyContent: `space-between`,\n    position: `relative`,\n    zIndex: 2,\n    pt: 4,\n    pb: 5\n  },\n  leftColumn: {\n    flexBasis: `2/3`,\n    flex: 1,\n    textAlign: [`center`, null, `left`]\n  },\n  rightColumn: {\n    display: [`none`, null, `block`],\n    flexBasis: `1/2`\n  }\n}\n\nconst LeftColumn = ({ children, sx, ...props }) => (\n  <Box sx={{ ...styles.leftColumn, ...sx }} {...props}>\n    {children}\n  </Box>\n)\n\nconst RightColumn = ({ children, sx, ...props }) => (\n  <Box sx={{ ...styles.rightColumn, ...sx }} {...props}>\n    {children}\n  </Box>\n)\n\nconst Overlay = ({ children }) => children\n\nconst Wrapper = ({ children, ...props }) => {\n  const childrenArray = Children.toArray(children)\n\n  const OverlayContent = childrenArray.filter(\n    ({ type }) =>\n      type.displayName === Overlay.name || type.name === Overlay.name\n  )\n\n  const heroContent = childrenArray.filter(\n    ({ type }) =>\n      type.displayName !== Overlay.name && type.name !== Overlay.name\n  )\n  return (\n    <>\n      <Flex sx={{ ...styles.wrapper, ...props.sx }}>{heroContent}</Flex>\n      {OverlayContent}\n    </>\n  )\n}\n\nexport default {\n  Wrapper,\n  LeftColumn,\n  RightColumn,\n  Overlay\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Button, Box, Heading, Text } from 'theme-ui'\n\n/**\n * Shadow me to add your own content\n */\n\nconst styles = {\n  author: {\n    display: `inline-block`,\n    color: `alpha`\n  },\n  occupation: {\n    mb: 4\n  },\n  specialty: {\n    color: `text`,\n    mb: 4\n  }\n}\n\nconst HeroContent = () => (\n  <>\n    <Heading variant='h1'>\n      Hi, I'm <Text sx={styles.author}>Simon Ågren</Text>.\n    </Heading>\n    <Heading variant='h1' sx={styles.occupation}>\n      Cloud Security Success Manager at Onevinn and Microsoft MVP\n    </Heading>\n    <Heading variant='h3' sx={styles.specialty}>\n      I write about Microsoft 365 and Security\n    </Heading>\n    <Box variant='buttons.group'>\n      <Button as={Link} to='/about'>\n        About Me\n      </Button>\n    </Box>\n  </>\n)\n\nexport default HeroContent\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Box } from 'theme-ui'\nimport Avatar from '@components/Avatar'\n\nconst styles = {\n  wrapper: {\n    display: [`none`, null, `block`],\n    position: `relative`,\n    textAlign: `center`\n  },\n  pattern: {\n    height: `1/2`,\n    transform: `translate(0, 50%)`\n  }\n}\n\nconst HeroPhoto = () => {\n  const data = useStaticQuery(heroQuery)\n  const image = data && data.avatar && data.avatar.childImageSharp\n\n  return (\n    <Box sx={styles.wrapper}>\n      <Avatar\n        avatar={image}\n        withPattern\n        patternStyles={styles.pattern}\n        loading='eager'\n      />\n    </Box>\n  )\n}\n\nconst heroQuery = graphql`\n  query HeroQuery2 {\n    avatar: file(absolutePath: { regex: \"/hero.(jpeg|jpg|gif|png)/\" }) {\n      childImageSharp {\n        regular: gatsbyImageData(\n          width: 320\n          height: 320\n          transformOptions: { cropFocus: NORTH }\n          placeholder: TRACED_SVG\n        )\n      }\n    }\n  }\n`\nexport default HeroPhoto\n","import React from 'react'\nimport HeroWide from '@widgets/HeroWide'\nimport Content from './Hero.Content'\nimport Photo from './Hero.Photo'\n\nconst Hero = props => {\n  const {\n    location: { pathname },\n    pageContext: { basePath }\n  } = props\n\n  if (pathname !== basePath) return null\n\n  return (\n    <HeroWide.Wrapper>\n      <HeroWide.LeftColumn>\n        <Content />\n      </HeroWide.LeftColumn>\n      <HeroWide.RightColumn>\n        <Photo />\n      </HeroWide.RightColumn>\n    </HeroWide.Wrapper>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { Layout, Stack, Hero, Main, Sidebar, PreFooter } from '@layout'\nimport CardList from '@components/CardList'\nimport Sticky from '@components/Sticky'\nimport Divider from '@components/Divider'\nimport Pagination from '@components/Pagination'\nimport Seo from '@widgets/Seo'\nimport Categories from '@widgets/Categories'\nimport Tags from '@widgets/Tags'\nimport NewsletterCompact from '@widgets/NewsletterCompact'\nimport Social from '@widgets/Social'\nimport HeroComponent from '../components/Hero/Hero'\nimport { useBlogTags, useBlogCategories } from '@helpers-blog'\n\nconst Posts = ({ data: { paginatedPosts = {}, featuredPosts = {} }, ...props }) => {\n  const { pageContext: { services = {}, basePath, siteUrl } = {} } = props\n  const tags = useBlogTags()\n  const categories = useBlogCategories()\n\n  return (\n    <Layout {...props}>\n      <Seo title='Home' siteUrl={siteUrl} />\n      <Hero sx={{ bg: `contentBg` }}>\n        <HeroComponent {...props} />\n      </Hero>\n      <Divider />\n      <Stack>\n        <Main>\n          <CardList\n            nodes={featuredPosts.nodes}\n            limit={5}\n            variant='vertical-cover'\n            title='Featured'\n            slider\n            columns={[1, 2, 3, 3]}\n            autoPlay\n            styles={{maxHeight: '200px'}}\n          />\n        </Main>\n      </Stack>\n      <Divider />\n      <Stack>\n        <Main>\n          <CardList\n            variant={['horizontal-md', 'horizontal']}\n            title='Recently Published'\n            nodes={paginatedPosts.nodes}\n            columns={[1]}\n          />\n        </Main>\n        <Sidebar>\n          <Categories categories={categories} />\n          <Divider />\n          <Tags tags={tags} />\n          <Divider />\n          <Social />\n          <Sticky>\n            {services.mailchimp && (\n              <>\n                <Divider />\n                <NewsletterCompact />\n              </>\n            )}\n          </Sticky>\n        </Sidebar>\n      </Stack>\n      <Divider />\n      <PreFooter>\n        <Pagination {...paginatedPosts.pageInfo} basePath={basePath} />\n      </PreFooter>\n    </Layout>\n  )\n}\n\nexport default Posts\n","import { graphql } from 'gatsby'\nimport PostsPage from '../containers/Posts'\n\nexport default PostsPage\n\nexport const pageQuery = graphql`\n  query PostsPageQuery(\n    $paginatePostsPage: Boolean!\n    $skip: Int\n    $limit: Int\n    $includeExcerpt: Boolean!\n    $includeTimeToRead: Boolean!\n    $imageQuality: Int!\n    $currentDate: Date!\n  ) {\n    featuredPosts: allArticle(\n      filter: {\n        private: { ne: true }\n        draft: { ne: true }\n        featured: { eq: true }\n        date: { lte: $currentDate }\n      }\n      sort: { fields: [date], order: DESC }\n      limit: 10\n    ) {\n      nodes {\n        ...ArticlePreview\n        ...ArticleThumbnailFeatured\n      }\n    }\n\n    recentPosts: allArticle(\n      filter: { private: { ne: true }, draft: { ne: true }, date: { lte: $currentDate } }\n      sort: { fields: [date], order: DESC }\n      limit: 6\n    ) {\n      nodes {\n        ...ArticlePreview\n        ...ArticleThumbnailRegular\n      }\n    }\n\n    posts: allArticle(\n      filter: { private: { ne: true }, draft: { ne: true }, date: { lte: $currentDate } }\n      sort: { fields: [date], order: DESC }\n      limit: 1000\n    ) @skip(if: $paginatePostsPage) {\n      group(field: category___name, limit: 10) {\n        categoryName: fieldValue\n        nodes {\n          ...ArticlePreview\n          ...ArticleThumbnailRegular\n        }\n      }\n    }\n\n    paginatedPosts: allArticle(\n      filter: { private: { ne: true }, draft: { ne: true }, date: { lte: $currentDate } }\n      sort: { fields: [date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) @include(if: $paginatePostsPage) {\n      nodes {\n        ...ArticlePreview\n        ...ArticleThumbnailRegular\n      }\n      ...ArticlePagination\n    }\n  }\n`\n","// normalize use of trailing slash\nexport default slug => slug.replace(/\\/*$/, `/`)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Button, Flex, Box } from 'theme-ui'\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport normalizeSlug from '@components/utils/normalizeSlug'\n\nconst pagingParam = 'page'\n\nconst styles = {\n  wrapper: {\n    justifyContent: `space-between`,\n    alignItems: `center`,\n    textAlign: `center`,\n    borderRadius: `full`,\n    bg: `contentBg`,\n    maxWidth: [`none`, 500],\n    mx: `auto`,\n    p: 1\n  },\n  item: {\n    width: `1/3`\n  },\n  number: {\n    py: 2\n  },\n  button: {\n    minWidth: `full`\n  }\n}\n\nconst Pagination = ({\n  currentPage,\n  pageCount,\n  hasPreviousPage,\n  hasNextPage,\n  basePath = '',\n  slug = ''\n}) => {\n  if (!hasNextPage && !hasPreviousPage) return ''\n  let prefixPath = normalizeSlug(basePath + slug)\n  let pagingPath = normalizeSlug(prefixPath + pagingParam)\n\n  const prevLink =\n    currentPage >= 3 ? `${pagingPath}${currentPage - 1}` : prefixPath\n  const nextLink = `${pagingPath}${currentPage + 1}`\n\n  return (\n    <Flex sx={styles.wrapper}>\n      <Box sx={styles.item}>\n        {hasPreviousPage && (\n          <Button variant='mute' as={Link} to={prevLink} sx={styles.button}>\n            <FaChevronLeft />\n            Previous\n          </Button>\n        )}\n      </Box>\n      <Box sx={{ ...styles.item, ...styles.number }}>\n        Page <strong>{currentPage}</strong> of <strong>{pageCount}</strong>\n      </Box>\n      <Box sx={styles.item}>\n        {hasNextPage && (\n          <Button variant='dark' as={Link} to={nextLink} sx={styles.button}>\n            Next\n            <FaChevronRight />\n          </Button>\n        )}\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Pagination\n\nPagination.propTypes = {\n  currentPage: PropTypes.number,\n  pageCount: PropTypes.number,\n  hasPreviousPage: PropTypes.bool,\n  hasNextPage: PropTypes.bool,\n  slug: PropTypes.string,\n  pagingParam: PropTypes.string\n}\n","import { useStaticQuery, graphql } from 'gatsby'\nimport dedupe from 'dedupe'\n\nexport const useBlogCategories = () => {\n  const { allArticleCategory } = useStaticQuery(categoriesQuery)\n  return allArticleCategory.nodes\n    ? dedupe(allArticleCategory.nodes, node => node.slug)\n    : null\n}\n\nconst categoriesQuery = graphql`\n  query allArticleCategoryQuery {\n    allArticleCategory {\n      nodes {\n        ...ArticleCategory\n      }\n    }\n  }\n`\n","import { useStaticQuery, graphql } from 'gatsby'\nimport dedupe from 'dedupe'\n\nexport const useBlogAuthors = () => {\n  const { allArticleAuthor } = useStaticQuery(authorsQuery)\n  return allArticleAuthor.nodes\n    ? dedupe(allArticleAuthor.nodes, node => node.slug)\n    : null\n}\n\nconst authorsQuery = graphql`\n  query allArticleAuthorQuery {\n    allArticleAuthor {\n      nodes {\n        ...ArticleAuthor\n      }\n    }\n  }\n`\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const useBlogTags = () => {\n  const { allArticleTag } = useStaticQuery(tagsQuery)\n  return allArticleTag.nodes || []\n}\n\nconst tagsQuery = graphql`\n  query allArticleTagQuery {\n    allArticleTag {\n      nodes {\n        ...ArticleTag\n      }\n    }\n  }\n`\n"],"names":["_ref","children","___EmotionJSX","Container","variant","styles","button","vertical","display","alignItems","textAlign","overflow","mb","p","pr","svg","color","verticalAlign","size","bg","horizontal","icon","transition","justifyContent","alignSelf","width","boxSizing","borderRadius","height","mx","pt","text","flex","whiteSpace","m","IconButton","name","Icon","iconPath","iconColor","to","Button","as","Link","sx","Box","SVG","src","Heading","defaultProps","number","undefined","flexWrap","overflowX","scrollBehavior","a","minWidth","Categories","categories","props","_objectWithoutProperties","_excluded","Section","_extends","aside","title","map","_ref2","id","slug","totalCount","buttonProps","key","FaArchive","tags","Card","Badge","Social","social","useSiteMetadata","Text","Navigation","items","attachSocialIcons","iconOnly","wrapper","position","zIndex","pb","leftColumn","flexBasis","rightColumn","Overlay","_ref3","_ref4","_excluded3","childrenArray","Children","toArray","OverlayContent","filter","_ref5","type","displayName","heroContent","_ref6","React","Flex","_objectSpread","_excluded2","author","occupation","specialty","HeroContent","pattern","transform","heroQuery","HeroPhoto","data","useStaticQuery","image","avatar","childImageSharp","Avatar","withPattern","patternStyles","loading","location","pathname","pageContext","basePath","HeroWide","Content","Photo","paginatedPosts","featuredPosts","services","siteUrl","useBlogTags","useBlogCategories","Layout","Seo","Hero","HeroComponent","Divider","Stack","Main","CardList","nodes","limit","slider","columns","autoPlay","maxHeight","Sidebar","Tags","Sticky","mailchimp","NewsletterCompact","PreFooter","Pagination","pageInfo","replace","maxWidth","item","py","currentPage","pageCount","hasPreviousPage","hasNextPage","prefixPath","normalizeSlug","pagingPath","prevLink","nextLink","FaChevronLeft","FaChevronRight","allArticleCategory","categoriesQuery","dedupe","node","useBlogAuthors","allArticleAuthor","authorsQuery","allArticleTag","tagsQuery"],"sourceRoot":""}
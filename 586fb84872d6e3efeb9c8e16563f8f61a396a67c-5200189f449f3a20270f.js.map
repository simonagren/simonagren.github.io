{"version":3,"file":"586fb84872d6e3efeb9c8e16563f8f61a396a67c-5200189f449f3a20270f.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/utils/columnSizeMatcher.js","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/utils/getReadableColor.js","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Category.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Title.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Excerpt.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/AvatarSimple/AvatarSimple.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Author.Avatar.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Author.Name.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/TextList/TextList.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Info.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.Icon.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.Image.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.Base.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/Card/Card.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/MemphisPattern/MemphisPattern.jsx"],"sourcesContent":["//Responsive flex sizes based on theme-ui sizes (theme.sizes)\nexport default columns => {\n  if (!Array.isArray(columns) || columns.length <= 0) return\n\n  let columnSizes\n\n  const sizes = {\n    1: `full`,\n    2: `1/2`,\n    3: `1/3`,\n    4: `1/4`,\n    5: `1/5`\n  }\n  columnSizes = {\n    flexBasis: [\n      sizes[columns[0]],\n      sizes[columns[1]],\n      sizes[columns[2]],\n      sizes[columns[3]]\n    ]\n  }\n\n  return columnSizes\n}\n","const getReadableColor = hex => {\n  if (hex.indexOf('#') === 0) {\n    hex = hex.slice(1)\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  if (hex.length !== 6) {\n    console.log('Invalid HEX color.')\n    return\n  }\n  var r = parseInt(hex.slice(0, 2), 16),\n    g = parseInt(hex.slice(2, 4), 16),\n    b = parseInt(hex.slice(4, 6), 16)\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#2d3748' : '#FFFFFF'\n}\n\nexport default getReadableColor\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { Box, Badge, css } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport getReadableColor from '@components/utils/getReadableColor'\n\nconst styles = {\n  badge: {\n    mb: 3\n  }\n}\n\nconst CardBodyCategory = ({ variant, category, omitCategory }) =>\n  !omitCategory && category && category.slug ? (\n    <Box css={css(styles.badge)} sx={{ variant: rv(variant, 'category') }}>\n      <Badge\n        variant='tag'\n        as={Link}\n        to={category.slug}\n        sx={\n          category.color && {\n            bg: category.color,\n            color: getReadableColor(category.color)\n          }\n        }\n      >\n        {category.name}\n      </Badge>\n    </Box>\n  ) : null\n\nexport default CardBodyCategory\n","import React from 'react'\nimport { Link as GLink } from 'gatsby'\nimport { Heading } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\n\nconst CardBodyTitle = ({ variant, title, slug, link }) => {\n  const linkProps = link\n    ? {\n        as: 'a',\n        href: link,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      }\n    : {\n        as: GLink,\n        to: slug\n      }\n  return (\n    <Heading {...linkProps} sx={{ variant: rv(variant, 'title') }}>\n      {title}\n    </Heading>\n  )\n}\n\nexport default CardBodyTitle\n","import React from 'react'\nimport { Text, useThemeUI, get } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\n\nconst styles = {\n  excerpt: {\n    flex: `auto`,\n    mb: 3\n  }\n}\n\nconst CardBodyExcerpt = ({ variant, excerpt, omitExcerpt }) => {\n  const context = useThemeUI()\n\n  const responsiveVariant = rv(variant, 'excerpt')\n\n  const visibility = responsiveVariant.reduce(\n    (mobileVisibility, variant) =>\n      mobileVisibility === false &&\n      get(context.theme, variant, {}).display === 'none'\n        ? false\n        : true,\n    false\n  )\n\n  return !omitExcerpt && visibility ? (\n    <Text\n      variant='small'\n      sx={{\n        ...styles.excerpt,\n        variant: responsiveVariant\n      }}\n    >\n      {excerpt}\n    </Text>\n  ) : null\n}\n\nexport default CardBodyExcerpt\n","import React from 'react'\nimport { Box } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport CardBodyCategory from './Card.Body.Category'\nimport CardBodyTitle from './Card.Body.Title'\nimport CardBodyExcerpt from './Card.Body.Excerpt'\n\nconst styles = {\n  body: {\n    display: `flex`,\n    flexDirection: `column`,\n    justifyContent: `center`,\n    flex: 1\n  }\n}\n\nconst CardBody = ({ children, omitBody, ...props }) =>\n  !omitBody && (\n    <Box\n      sx={{\n        ...styles.body,\n        variant: rv(props.variant, 'body')\n      }}\n    >\n      <CardBodyCategory {...props} />\n      <CardBodyTitle {...props} />\n      <CardBodyExcerpt {...props} />\n      {children}\n    </Box>\n  )\n\nexport default CardBody\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\nimport { Box } from 'theme-ui'\nimport getImageVariant from '@components/utils/getImageVariant'\n\nconst styles = {\n  imageWrapperSimple: {\n    bg: `omegaLight`,\n    display: `inline-block`,\n    verticalAlign: `middle`,\n    borderRadius: `full`,\n    borderStyle: `solid`,\n    borderWidth: `md`,\n    borderColor: `omegaLight`,\n    overFlow: `hidden`,\n    opacity: 0.9,\n    mr: 3,\n    img: {\n      borderRadius: `full`\n    },\n    ':hover': {\n      opacity: 1\n    },\n    '> div': {\n      borderRadius: `full`\n    }\n  }\n}\n\nconst AvatarSimple = ({ avatar, size, alt }) => {\n  const image = avatar && getImageVariant(avatar, size)\n\n  if (!image) return null\n\n  return (\n    <Box sx={styles.imageWrapperSimple}>\n      <Img image={image} alt={alt} />\n    </Box>\n  )\n}\n\nexport default AvatarSimple\n\nAvatarSimple.defaultProps = {\n  size: 'regular'\n}\n\nAvatarSimple.propTypes = {\n  size: PropTypes.oneOf([false, 'small', 'regular']),\n  loading: PropTypes.string,\n  alt: PropTypes.string\n}\n","import React from 'react'\nimport { Link as GLink } from 'gatsby'\nimport { Link, useThemeUI, get } from 'theme-ui'\nimport AvatarSimple from '@components/AvatarSimple'\nimport rv from '@components/utils/buildResponsiveVariant'\n\nconst CardFooterAuthorAvatar = ({ variant, omitAuthor, author }) => {\n  const context = useThemeUI()\n\n  if (omitAuthor) return null\n\n  const responsiveVariant = rv(variant, 'authorPhoto')\n\n  const visibility = responsiveVariant.reduce(\n    (mobileVisibility, variant) =>\n      mobileVisibility === false &&\n      get(context.theme, variant, {}).display === 'none'\n        ? false\n        : true,\n    false\n  )\n\n  return visibility ? (\n    author && author.thumbnail ? (\n      <Link\n        as={GLink}\n        to={author.slug}\n        aria-label={author.name}\n        sx={{ variant: responsiveVariant }}\n      >\n        <AvatarSimple\n          avatar={author.thumbnail}\n          alt={author.name}\n          size='small'\n        />\n      </Link>\n    ) : null\n  ) : null\n}\nexport default CardFooterAuthorAvatar\n","import React from 'react'\nimport { Link as GLink } from 'gatsby'\nimport { Text, Link } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\n\nconst styles = {\n  author: {\n    pr: 2\n  }\n}\n\nconst CardFooterAuthorName = ({ variant, omitAuthor, author }) =>\n  !omitAuthor && author && author.slug ? (\n    <Text sx={{ ...styles.author, variant: rv(variant, 'author') }}>\n      <Link variant='mute' as={GLink} to={author.slug}>\n        <strong>{author.name}</strong>\n      </Link>\n    </Text>\n  ) : null\n\nexport default CardFooterAuthorName\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box } from 'theme-ui'\n\nconst styles = {\n  wrapper: separator => ({\n    '> *': {\n      ':not(:last-child) + *:before': {\n        content: `\" ${separator} \"`\n      }\n    }\n  }),\n  nowrap: {\n    overflow: `hidden`,\n    textOverflow: `ellipsis`,\n    whiteSpace: `nowrap`\n  }\n}\n\nconst TextList = ({ nowrap, separator, children }) => (\n  <Box sx={{ ...(nowrap && styles.nowrap), ...styles.wrapper(separator) }}>\n    {children}\n  </Box>\n)\n\nexport default TextList\n\nTextList.defaultProps = {\n  separator: '・',\n  nowrap: false\n}\n\nTextList.propTypes = {\n  separator: PropTypes.string,\n  nowrap: PropTypes.bool\n}\n","import React from 'react'\nimport { Text } from 'theme-ui'\nimport TextList from '@components/TextList'\nimport { FaRegClock } from 'react-icons/fa'\nimport rv from '@components/utils/buildResponsiveVariant'\n\nconst CardFooterInfo = ({ variant, date, timeToRead }) => (\n  <TextList nowrap>\n    {date && <Text sx={{ variant: rv(variant, 'date') }}>{date}</Text>}\n    {timeToRead && (\n      <Text sx={{ variant: rv(variant, 'timeToRead') }}>\n        <FaRegClock css={{ verticalAlign: `middle` }} /> {timeToRead} min\n      </Text>\n    )}\n  </TextList>\n)\n\nexport default CardFooterInfo\n","import React from 'react'\nimport { Flex } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport AuthorAvatar from './Card.Footer.Author.Avatar'\nimport AuthorName from './Card.Footer.Author.Name'\nimport Info from './Card.Footer.Info'\n\nconst styles = {\n  wrapper: {\n    alignItems: `center`\n  },\n  postInfo: {\n    flex: 1,\n    flexWrap: `wrap`,\n    justifyContent: `space-between`,\n    color: `omega`\n  }\n}\n\nconst CardFooter = ({ omitFooter, ...props }) =>\n  !omitFooter && (\n    <Flex css={styles.wrapper} sx={{ variant: rv(props.variant, 'footer') }}>\n      <AuthorAvatar {...props} />\n      <Flex sx={styles.postInfo}>\n        <AuthorName {...props} />\n        <Info {...props} />\n      </Flex>\n    </Flex>\n  )\nexport default CardFooter\n","import React from 'react'\nimport SVG from 'react-inlinesvg'\nimport { Flex, Box, Text, css } from 'theme-ui'\nimport MemphisPattern from '@components/MemphisPattern'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport getReadableColor from '@components/utils/getReadableColor'\n\nconst styles = {\n  iconBox: {\n    height: `full`\n  },\n  iconAndText: {\n    flexDirection: `column`,\n    justifyContent: `center`,\n    alignItems: `center`,\n    // color: `omegaDark`,\n    position: `relative`,\n    fontWeight: `medium`,\n    height: `full`,\n    zIndex: 2,\n    px: 2,\n    lineHeight: 1.33,\n    svg: {\n      pb: 2\n    }\n  },\n  pattern: {\n    opacity: 0.07,\n    borderRadius: `default`\n  }\n}\n\nconst CardMediaIcon = ({ variant, thumbnailText, category }) =>\n  category && category.icon && category.name ? (\n    <Box\n      bg={category.color || 'omegaDark'}\n      color={category.color ? getReadableColor(category.color) : '#fff'}\n      sx={{\n        ...styles.iconBox,\n        variant: rv(variant, 'iconBox')\n      }}\n    >\n      <Flex sx={styles.iconAndText}>\n        <SVG src={category.icon} css={css({ variant: rv(variant, 'icon') })} />\n        <Text sx={{ variant: rv(variant, 'iconText') }}>\n          {thumbnailText || category.name}\n        </Text>\n      </Flex>\n      <MemphisPattern sx={styles.pattern} />\n    </Box>\n  ) : null\n\nexport default CardMediaIcon\n","import React from 'react'\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\nimport { css } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\n\nconst CardMediaImage = ({ variant, loading, image, title }) => (\n  <Img\n    image={image}\n    loading={loading}\n    alt={title}\n    css={css({\n      height: `full`,\n      verticalAlign: `middle`, //avoid baseline gap\n      img: {\n        bg: `omegaLighter`\n      },\n      variant: rv(variant, 'image')\n    })}\n  />\n)\nCardMediaImage.defaultProps = {\n  loading: 'lazy'\n}\n\nexport default CardMediaImage\n","import React from 'react'\nimport { Link as GLink } from 'gatsby'\nimport { Link, useThemeUI, get } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport getImageVariant from '@components/utils/getImageVariant'\nimport CardMediaIcon from './Card.Media.Icon'\nimport CardMediaImage from './Card.Media.Image'\n\nconst DEFAULT_IMAGE_VARIANT = 'vertical'\n\nconst styles = {\n  link: {\n    userSelect: `none`,\n    textAlign: `center`,\n    position: `relative`,\n    display: `block`\n  }\n}\n\nconst CardMedia = ({\n  imageVariant,\n  omitMedia,\n  mediaType,\n  title,\n  slug,\n  link,\n  ...props\n}) => {\n  const context = useThemeUI()\n\n  if (omitMedia) return null\n\n  const { variant, thumbnail, thumbnailText } = props\n\n  const imageVar =\n    imageVariant ||\n    get(context.theme, rv(variant, 'imageVariant')[0]) ||\n    DEFAULT_IMAGE_VARIANT\n\n  const image = getImageVariant(thumbnail, imageVar)\n\n  const linkProps = link\n    ? {\n        as: 'a',\n        href: link,\n        target: '_blank',\n        rel: 'noopener noreferrer'\n      }\n    : {\n        as: GLink,\n        to: slug\n      }\n\n  return (\n    <Link\n      {...linkProps}\n      css={styles.link}\n      sx={{ variant: rv(variant, 'media') }}\n      aria-label={title}\n    >\n      {mediaType === 'image' && image && (\n        <CardMediaImage image={image} title={title} {...props} />\n      )}\n      {(mediaType === 'icon' || (!image && thumbnailText)) && (\n        <CardMediaIcon {...props} />\n      )}\n    </Link>\n  )\n}\n\nCardMedia.defaultProps = {\n  mediaType: 'image'\n}\n\nexport default CardMedia\n","import React from 'react'\nimport { Box, Card, Flex } from 'theme-ui'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport columnSizeMatcher from '@components/utils/columnSizeMatcher'\nimport Body from './Card.Body'\nimport Footer from './Card.Footer'\nimport Media from './Card.Media'\n\nconst styles = {\n  card: {\n    overflow: `hidden`,\n    height: `full`\n  },\n  content: {\n    alignItems: `stretch`,\n    height: `full`\n  }\n}\n\nconst CardBase = ({ columns, onMouseOver, ...props }) => (\n  <Box\n    className='blog_card'\n    sx={columnSizeMatcher(columns)}\n    onMouseOver={onMouseOver}\n    onFocus={onMouseOver}\n  >\n    <Card\n      variant='interactive'\n      sx={{\n        ...styles.card,\n        variant: rv(props.variant, 'card')\n      }}\n    >\n      <Flex\n        as='article'\n        sx={{\n          ...styles.content,\n          variant: rv(props.variant, 'content')\n        }}\n      >\n        <Media {...props} />\n        <Body {...props}>\n          <Footer {...props} />\n        </Body>\n      </Flex>\n    </Card>\n  </Box>\n)\n\nexport default CardBase\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport rv from '@components/utils/buildResponsiveVariant'\nimport Base from './Card.Base'\n\nconst Card = ({ variantGroup, variant, aside, ...props }) => {\n  const responsiveVariant = rv(variantGroup, variant)\n  return <Base variant={responsiveVariant} {...props} />\n}\n\nexport default Card\n\nCard.defaultProps = {\n  variantGroup: 'cards',\n  variant: 'vertical'\n}\n\nCard.propTypes = {\n  variant: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.oneOf([\n      'horizontal',\n      'horizontal-aside',\n      'horizontal-md',\n      'horizontal-lg',\n      'horizontal-cover',\n      'horizontal-cover-hero',\n      'horizontal-cover-wide',\n      'horizontal-hero',\n      'vertical-cover',\n      'vertical',\n      'search'\n    ])\n  ]),\n  omitMedia: PropTypes.bool,\n  omitCategory: PropTypes.bool,\n  omitExcerpt: PropTypes.bool,\n  omitAuthor: PropTypes.bool,\n  omitBody: PropTypes.bool,\n  omitFooter: PropTypes.bool,\n  aside: PropTypes.bool,\n  columns: PropTypes.array,\n  mediaType: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['icon', 'image'])\n  ]),\n  imageVariant: PropTypes.string,\n  loading: PropTypes.oneOf(['lazy', 'auto', 'eager']),\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  slug: PropTypes.string,\n  link: PropTypes.string,\n  category: PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n    slug: PropTypes.string,\n    icon: PropTypes.string\n  }),\n  author: PropTypes.shape({\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    thumbnail: PropTypes.object\n  }),\n  date: PropTypes.string,\n  timeToRead: PropTypes.number,\n  excerpt: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  thumbnail: PropTypes.object,\n  thumbnailText: PropTypes.string\n}\n","import React from 'react'\nimport { Box } from 'theme-ui'\nimport memphis from '../../assets/memphis.png'\n\nconst styles = {\n  pattern: {\n    size: `full`,\n    backgroundImage: `url(${memphis})`,\n    backgroundSize: `11rem`,\n    position: `absolute`,\n    opacity: 0.05,\n    top: 0,\n    left: 0\n  }\n}\n\nconst MemphisPattern = ({ sx = {}, ...props }) => (\n  <Box sx={{ ...styles.pattern, ...sx }} {...props}></Box>\n)\n\nexport default MemphisPattern\n"],"names":["columns","Array","isArray","length","columnSizes","sizes","flexBasis","hex","indexOf","slice","parseInt","console","log","styles","mb","_ref","variant","category","omitCategory","slug","___EmotionJSX","Box","css","sx","rv","Badge","as","Link","to","color","bg","getReadableColor","name","title","link","linkProps","href","target","rel","GLink","Heading","_extends","excerpt","flex","omitExcerpt","context","useThemeUI","responsiveVariant","visibility","reduce","mobileVisibility","get","theme","display","Text","_objectSpread","body","flexDirection","justifyContent","children","omitBody","props","_objectWithoutProperties","_excluded","CardBodyCategory","CardBodyTitle","CardBodyExcerpt","imageWrapperSimple","verticalAlign","borderRadius","borderStyle","borderWidth","borderColor","overFlow","opacity","mr","img","AvatarSimple","avatar","size","alt","image","getImageVariant","Img","defaultProps","omitAuthor","author","thumbnail","pr","wrapper","separator","content","nowrap","overflow","textOverflow","whiteSpace","TextList","date","timeToRead","FaRegClock","_css","alignItems","postInfo","flexWrap","omitFooter","Flex","AuthorAvatar","AuthorName","Info","iconBox","height","iconAndText","position","fontWeight","zIndex","px","lineHeight","svg","pb","pattern","thumbnailText","icon","SVG","src","MemphisPattern","CardMediaImage","loading","userSelect","textAlign","CardMedia","imageVariant","omitMedia","mediaType","imageVar","CardMediaIcon","card","onMouseOver","className","columnSizeMatcher","onFocus","Card","Media","Body","Footer","variantGroup","aside","Base","backgroundImage","backgroundSize","top","left"],"sourceRoot":""}
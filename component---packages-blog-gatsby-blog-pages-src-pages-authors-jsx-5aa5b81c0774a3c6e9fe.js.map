{"version":3,"file":"component---packages-blog-gatsby-blog-pages-src-pages-authors-jsx-5aa5b81c0774a3c6e9fe.js","mappings":"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","sources":["webpack://@elegantstack/gatsby-starter-flexiblog-personal/../node_modules/dedupe/index.js","webpack://@elegantstack/gatsby-starter-flexiblog-personal/./src/@elegantstack/flow-ui-components/Avatar/Avatar.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/PageTitle/PageTitle.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-components/src/MemphisPattern/MemphisPattern.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-helpers/src/useBlogCategories.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-helpers/src/useBlogAuthors.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-helpers/src/useBlogTags.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/flow-ui/flow-ui-widgets/src/AuthorExpanded/AuthorExpanded.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-personal/../packages/blog/gatsby-blog-pages/src/pages/authors.jsx"],"sourcesContent":["'use strict'\n\nfunction dedupe (client, hasher) {\n    hasher = hasher || JSON.stringify\n\n    const clone = []\n    const lookup = {}\n\n    for (let i = 0; i < client.length; i++) {\n        let elem = client[i]\n        let hashed = hasher(elem)\n\n        if (!lookup[hashed]) {\n            clone.push(elem)\n            lookup[hashed] = true\n        }\n    }\n\n    return clone\n}\n\nmodule.exports = dedupe","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\nimport { Box, css } from 'theme-ui'\nimport MemphisPattern from '@components/MemphisPattern'\nimport getImageVariant from '@components/utils/getImageVariant'\n\n//Base size to keep all layers aligned easier\nconst bs = x => `${x * 0.35}rem`\n\nconst styles = {\n  wrapper: {\n    position: `relative`,\n    zIndex: 2,\n    textAlign: `center`,\n    mb: bs(3)\n  },\n  pattern: {\n    backgroundSize: `8rem`,\n    opacity: 0.15\n  },\n  circle: ({ width }) => ({\n    width: [bs(30), `full`],\n    height: `full`,\n    maxWidth: width,\n    borderRadius: `full`,\n    position: `absolute`,\n    transform: `translate(-50%)  scale(0.98)`,\n    left: `50%`,\n    top: bs(3),\n    bg: `alpha`\n  }),\n  arc: ({ width }) => ({\n    width: [bs(30), `full`],\n    height: `full`,\n    maxWidth: width,\n    borderRadius: `full`,\n    position: `absolute`,\n    zIndex: 2,\n    left: `50%`,\n    transform: `translate(-50%)`,\n    mt: bs(-1),\n    ml: bs(-2),\n    boxShadow: t => `\n\t\t\t${bs(2)}\n\t\t\t${bs(4)}\n\t\t\t${t.colors.omegaLight}\n\t\t`\n  }),\n  imageWrapper: {\n    mx: `auto`,\n    img: {\n      borderRadius: `full`\n    }\n  }\n}\n\nconst Avatar = ({\n  avatar,\n  withPattern,\n  patternStyles = {},\n  size,\n  width,\n  loading,\n  alt\n}) => {\n  const image = avatar && getImageVariant(avatar, size)\n\n  if (!image) return null\n\n  width = width || image.width\n\n  return (\n    <Box sx={styles.wrapper}>\n      <Box>\n        {withPattern && (\n          <MemphisPattern sx={{ ...styles.pattern, ...patternStyles }} />\n        )}\n        {/* <Box sx={styles.circle({ width })}></Box> */}\n        {/* <Box sx={styles.arc({ width })}></Box> */}\n        <Img\n          image={image}\n          alt={alt}\n          loading={loading}\n          css={css(styles.imageWrapper)}\n        />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Avatar\n\nAvatar.defaultProps = {\n  size: 'regular',\n  withPattern: false\n}\n\nAvatar.propTypes = {\n  size: PropTypes.oneOf([false, 'small', 'regular']),\n  width: PropTypes.number,\n  withPattern: PropTypes.bool,\n  patternStyles: PropTypes.object,\n  loading: PropTypes.string,\n  alt: PropTypes.string\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Heading, Text, Badge } from 'theme-ui'\n\nconst styles = {\n  count: {\n    fontSize: 4\n  },\n  subheader: {\n    fontWeight: `body`,\n    color: `omegaDark`\n  },\n  runninghead: {\n    fontWeight: `body`,\n    color: `omegaDark`,\n    mb: 0\n  }\n}\n\nconst PageTitle = ({ header, subheader, running, totalCount }) => {\n  return (\n    <div>\n      <Heading variant='h1' as='h1'>\n        {header}{' '}\n        {totalCount && (\n          <Badge variant='tag-white' sx={styles.count}>\n            {' '}\n            {totalCount}\n          </Badge>\n        )}\n      </Heading>\n      {subheader && (\n        <Text variant='h3' sx={styles.subheader}>\n          {subheader}\n        </Text>\n      )}\n      {running && (\n        <Text variant='h4' sx={styles.runninghead}>\n          {running}\n        </Text>\n      )}\n    </div>\n  )\n}\n\nexport default PageTitle\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n  subheader: PropTypes.string,\n  running: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  totalCount: PropTypes.number\n}\n","import React from 'react'\nimport { Box } from 'theme-ui'\nimport memphis from '../../assets/memphis.png'\n\nconst styles = {\n  pattern: {\n    size: `full`,\n    backgroundImage: `url(${memphis})`,\n    backgroundSize: `11rem`,\n    position: `absolute`,\n    opacity: 0.05,\n    top: 0,\n    left: 0\n  }\n}\n\nconst MemphisPattern = ({ sx = {}, ...props }) => (\n  <Box sx={{ ...styles.pattern, ...sx }} {...props}></Box>\n)\n\nexport default MemphisPattern\n","import { useStaticQuery, graphql } from 'gatsby'\nimport dedupe from 'dedupe'\n\nexport const useBlogCategories = () => {\n  const { allArticleCategory } = useStaticQuery(categoriesQuery)\n  return allArticleCategory.nodes\n    ? dedupe(allArticleCategory.nodes, node => node.slug)\n    : null\n}\n\nconst categoriesQuery = graphql`\n  query allArticleCategoryQuery {\n    allArticleCategory {\n      nodes {\n        ...ArticleCategory\n      }\n    }\n  }\n`\n","import { useStaticQuery, graphql } from 'gatsby'\nimport dedupe from 'dedupe'\n\nexport const useBlogAuthors = () => {\n  const { allArticleAuthor } = useStaticQuery(authorsQuery)\n  return allArticleAuthor.nodes\n    ? dedupe(allArticleAuthor.nodes, node => node.slug)\n    : null\n}\n\nconst authorsQuery = graphql`\n  query allArticleAuthorQuery {\n    allArticleAuthor {\n      nodes {\n        ...ArticleAuthor\n      }\n    }\n  }\n`\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport const useBlogTags = () => {\n  const { allArticleTag } = useStaticQuery(tagsQuery)\n  return allArticleTag.nodes || []\n}\n\nconst tagsQuery = graphql`\n  query allArticleTagQuery {\n    allArticleTag {\n      nodes {\n        ...ArticleTag\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link as GLink } from 'gatsby'\nimport { Flex, Box, Text, Heading, Card, Badge, Link } from 'theme-ui'\nimport MemphisPattern from '@components/MemphisPattern'\nimport Avatar from '@components/Avatar'\nimport Navigation from '@components/Navigation'\nimport attachSocialIcons from '@helpers/attachSocialIcons'\n\nconst styles = {\n  card: {\n    position: `relative`\n  },\n  wrapper: {\n    flexDirection: [`column`, `row`],\n    position: `relative`,\n    zIndex: 3\n  },\n  avatarColumn: {\n    flexBasis: `1/3`\n  },\n  infoColumn: {\n    flexBasis: `2/3`\n  },\n  innerBox: {\n    flexBasis: `1/2`,\n    flexGrow: 1,\n    px: [0, 3],\n    mt: [3, 0]\n  },\n  subheader: {\n    color: `omegaDark`\n  },\n  name: {\n    textAlign: [`center`, `left`],\n    mt: [3, 0],\n    px: 3\n  },\n  bio: {\n    textAlign: [`center`, `left`]\n  },\n  socialList: {\n    a: {\n      m: 0\n    }\n  },\n  link: {\n    position: `absolute`,\n    top: 10,\n    right: 10,\n    zIndex: 3\n  },\n  pattern: {\n    borderRadius: `lg`\n  },\n  gradient: {\n    size: `full`,\n    borderRadius: `lg`,\n    position: `absolute`,\n    left: 0,\n    top: 0,\n    zIndex: 2,\n    background: [\n      t =>\n        `linear-gradient(0deg, ${t.colors.contentBg} 20%, rgba(255, 255, 255, 0) 80%)`,\n      t =>\n        `linear-gradient(270deg, ${t.colors.contentBg} 20%, rgba(255, 255, 255, 0) 100%)`\n    ]\n  }\n}\n\nconst Subheader = ({ children }) => (\n  <Heading variant='h4' sx={styles.subheader}>\n    {children}\n  </Heading>\n)\n\nconst AuthorAvatar = ({ name, thumbnail, slug }) =>\n  thumbnail ? (\n    <Box>\n      <Link as={GLink} to={slug} aria-label={name}>\n        <Avatar avatar={thumbnail} alt={name} />\n      </Link>\n    </Box>\n  ) : null\n\nconst AuthorName = ({ name, slug }) => (\n  <Box sx={styles.name}>\n    <Heading variant='h3'>\n      <Link as={GLink} to={slug}>\n        {name}\n      </Link>\n    </Heading>\n  </Box>\n)\n\nconst AuthorBio = ({ title, description }) => (\n  <Box sx={styles.bio}>\n    <Subheader>{title}</Subheader>\n    <Text>{description}</Text>\n  </Box>\n)\n\nconst AuthorSkills = ({ skills }) =>\n  skills ? (\n    <Box sx={styles.innerBox}>\n      <Subheader>Expertise</Subheader>\n      {skills.map(skill => (\n        <Text key={`skill-${skill}`}>{skill}</Text>\n      ))}\n    </Box>\n  ) : null\n\nconst AuthorSocialMedia = ({ social }) =>\n  social ? (\n    <Box sx={styles.innerBox}>\n      <Subheader>Social Media</Subheader>\n      <Navigation\n        variant='vertical'\n        items={attachSocialIcons(social)}\n        wrapperStyle={styles.socialList}\n      />\n    </Box>\n  ) : null\n\nconst AuthorExpanded = ({ author, withLink }) => {\n  if (!author) return null\n\n  const { skills, social } = author\n\n  return (\n    <Card variant='paper' sx={styles.card}>\n      <Flex sx={styles.wrapper}>\n        <Box sx={styles.avatarColumn}>\n          <AuthorAvatar {...author} />\n        </Box>\n        <Box sx={styles.infoColumn}>\n          <AuthorName {...author} />\n          <Flex sx={styles.wrapper}>\n            <Box sx={styles.innerBox}>\n              <AuthorBio {...author} />\n            </Box>\n            {(social || skills) && (\n              <Box sx={styles.innerBox}>\n                <Flex>\n                  <AuthorSkills {...author} />\n                  <AuthorSocialMedia {...author} />\n                </Flex>\n              </Box>\n            )}\n          </Flex>\n        </Box>\n      </Flex>\n      {withLink && (\n        <Badge variant='tag' as={GLink} to={author.slug} sx={styles.link}>\n          View Posts\n        </Badge>\n      )}\n      <Box sx={styles.gradient} />\n      <MemphisPattern sx={styles.pattern} />\n    </Card>\n  )\n}\n\nexport default AuthorExpanded\n","import React from 'react'\nimport { Layout, Stack, Main } from '@layout'\nimport PageTitle from '@components/PageTitle'\nimport Divider from '@components/Divider'\nimport Seo from '@widgets/Seo'\nimport AuthorExpanded from '@widgets/AuthorExpanded'\nimport { useBlogAuthors } from '@helpers-blog'\n\nconst PageAuthors = props => {\n  const authors = useBlogAuthors()\n\n  return (\n    <Layout {...props}>\n      <Seo title='Our Team' />\n      <Divider />\n      <Stack effectProps={{ effect: 'fadeInDown' }}>\n        <PageTitle\n          header='Team Members'\n          subheader='FlexiBlog theme comes with a pre-made contact form component. You can integrate this form with serverless services such as Formspree, Getform, FormKeep and others to receive form submissions via email.'\n        />\n      </Stack>\n      <Stack>\n        <Main>\n          {authors.map((author, i) => (\n            <React.Fragment key={`item-${i}`}>\n              <Divider />\n              <AuthorExpanded author={author} withLink />\n            </React.Fragment>\n          ))}\n        </Main>\n      </Stack>\n    </Layout>\n  )\n}\n\nexport default PageAuthors\n"],"names":["module","exports","client","hasher","JSON","stringify","clone","lookup","i","length","elem","hashed","push","bs","x","styles","wrapper","position","zIndex","textAlign","mb","pattern","backgroundSize","opacity","circle","_ref","width","height","maxWidth","borderRadius","transform","left","top","bg","arc","_ref2","mt","ml","boxShadow","t","colors","omegaLight","imageWrapper","mx","img","Avatar","_ref3","avatar","withPattern","patternStyles","size","loading","alt","image","getImageVariant","___EmotionJSX","Box","sx","MemphisPattern","_objectSpread","Img","css","defaultProps","count","fontSize","subheader","fontWeight","color","runninghead","header","running","totalCount","Heading","variant","as","Badge","Text","backgroundImage","props","_objectWithoutProperties","_excluded","_extends","useBlogCategories","allArticleCategory","useStaticQuery","categoriesQuery","nodes","dedupe","node","slug","useBlogAuthors","allArticleAuthor","authorsQuery","useBlogTags","allArticleTag","tagsQuery","card","flexDirection","avatarColumn","flexBasis","infoColumn","innerBox","flexGrow","px","name","bio","socialList","a","m","link","right","gradient","background","contentBg","Subheader","children","AuthorAvatar","thumbnail","Link","GLink","to","AuthorName","AuthorBio","_ref4","title","description","AuthorSkills","_ref5","skills","map","skill","key","AuthorSocialMedia","_ref6","social","Navigation","items","attachSocialIcons","wrapperStyle","_ref7","author","withLink","Card","Flex","authors","Layout","Seo","Divider","Stack","effectProps","effect","PageTitle","Main","React","AuthorExpanded"],"sourceRoot":""}